:remote connect tinkerpop.server conf/remote.yaml
graph = JanusGraphFactory.open("conf/gremlin-server/janusgraph-cql-es-server.properties")
mgmt = graph.openManagement();operation = mgmt.makeVertexLabel('person').make();o_id = mgmt.makePropertyKey('o_id').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make();o_name = mgmt.makePropertyKey('o_name').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make();o_time = mgmt.makePropertyKey('o_time').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make();mgmt.addProperties(operation, o_id, o_name, o_time);mgmt.buildIndex('byOperationId', Vertex.class).addKey(o_id).buildCompositeIndex();mgmt.commit();ManagementSystem.awaitGraphIndexStatus(graph, "byOperationId").status(SchemaStatus.ENABLED).call()
mgmt = graph.openManagement(); project = mgmt.makeVertexLabel('project').make();p_id = mgmt.makePropertyKey('p_id').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make();p_name = mgmt.makePropertyKey('p_name').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make();mgmt.addProperties(project, p_id, p_name);mgmt.buildIndex('byProjectId', Vertex.class).addKey(p_id).buildCompositeIndex();mgmt.commit();ManagementSystem.awaitGraphIndexStatus(graph, "byProjectId").status(SchemaStatus.ENABLED).call()
mgmt = graph.openManagement(); dataset = mgmt.makeVertexLabel('dataset').make(); d_id = mgmt.makePropertyKey('d_id').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make(); d_name = mgmt.makePropertyKey('d_name').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make(); mgmt.addProperties(dataset, d_id, d_name);mgmt.buildIndex('byDatasetId', Vertex.class).addKey(d_id).buildCompositeIndex();mgmt.commit();ManagementSystem.awaitGraphIndexStatus(graph, "byDatasetId").status(SchemaStatus.ENABLED).call()
mgmt = graph.openManagement(); file = mgmt.makeVertexLabel('file').make(); i_id = mgmt.makePropertyKey('i_id').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make(); i_name = mgmt.makePropertyKey('i_name').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make(); mgmt.addProperties(file, i_id, i_name);mgmt.buildIndex('byFileId', Vertex.class).addKey(i_id).buildCompositeIndex();mgmt.commit();ManagementSystem.awaitGraphIndexStatus(graph, "byFileId").status(SchemaStatus.ENABLED).call()
mgmt = graph.openManagement(); user = mgmt.makeVertexLabel('user').make(); u_id = mgmt.makePropertyKey('u_id').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make(); mgmt.addProperties(user, u_id);mgmt.buildIndex('byUserId', Vertex.class).addKey(u_id).buildCompositeIndex();mgmt.commit();ManagementSystem.awaitGraphIndexStatus(graph, "byUserId").status(SchemaStatus.ENABLED).call()
mgmt = graph.openManagement(); time_hour = mgmt.makeVertexLabel('time_hour').make(); hour = mgmt.makePropertyKey('hour').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make(); mgmt.addProperties(time_hour, hour); time_date = mgmt.makeVertexLabel('time_date').make(); date = mgmt.makePropertyKey('date').dataType(String.class).cardinality(org.janusgraph.core.Cardinality.SINGLE).make(); mgmt.addProperties(time_date, date);mgmt.buildIndex('byDate', Vertex.class).addKey(date).buildCompositeIndex();mgmt.commit();ManagementSystem.awaitGraphIndexStatus(graph, "byDate").status(SchemaStatus.ENABLED).call()
mgmt = graph.openManagement();mgmt.getGraphIndexes(Vertex.class)